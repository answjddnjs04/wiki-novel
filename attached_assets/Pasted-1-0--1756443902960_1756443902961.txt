1. 해결하고 싶은 점

   * 소설 목록과 소설 상세 페이지에 표시되는 조회수가 0 또는 부정확한 값으로 나오는 문제를 해결하고, 실제 조회수
     데이터가 정확하게 반영되도록 하고 싶습니다.

  2. 문제가 된 이유

   * 동일한 코드 패턴 발견: 소설 상세 페이지(novel-detail.tsx)에서도 소설 목록 카드(NovelCard.tsx)와 마찬가지로
     (novel as any).viewCount라는 코드를 사용하여 조회수를 표시하고 있습니다.
   * 데이터 누락 의심: 이 코드 패턴은 프론트엔드가 백엔드 API로부터 viewCount 데이터를 제대로 받지 못하고 있을
     가능성이 매우 높다는 것을 의미합니다. 데이터베이스에는 viewCount를 저장하는 공간이 있지만, API가 이 값을  
     프론트엔드로 전달하는 과정에서 누락시키는 것으로 보입니다. 이 때문에 novel.viewCount는 항상 undefined가  
     되고, 화면에는 || 0에 의해 0만 표시되는 것입니다.

  3. 해결할 방법

   * 백엔드 API 로직 수정:
       1. 서버 코드에서 소설 정보를 반환하는 모든 API(예: /api/novels, /api/novels/:id)를 확인해야 합니다.    
       2. 데이터베이스에서 소설 정보를 조회하는 쿼리에 viewCount 필드가 포함되어 있는지 확인하고, 누락되었다면
          추가해야 합니다.
       3. API가 반환하는 최종 novel 객체에 viewCount 값이 반드시 포함되도록 수정해야 합니다.

   * 프론트엔드 코드 수정 (권장):
       1. 백엔드 수정이 완료된 후, (novel as any).viewCount를 novel.viewCount로 변경하여 더 안정적이고 명확한
          코드로 만들어야 합니다. 이렇게 하면 타입 시스템의 보호를 받을 수 있고, 향후 유사한 문제를 방지할 수
          있습니다.
1. 해결하고 싶은 점

   * 소설 목록과 소설 상세 페이지에 표시되는 조회수가 0 또는 부정확한 값으로 나오는 문제를 해결하고, 실제 조회수
     데이터가 정확하게 반영되도록 하고 싶습니다.

  2. 문제가 된 이유

   * 동일한 코드 패턴 발견: 소설 상세 페이지(novel-detail.tsx)에서도 소설 목록 카드(NovelCard.tsx)와 마찬가지로
     (novel as any).viewCount라는 코드를 사용하여 조회수를 표시하고 있습니다.
   * 데이터 누락 의심: 이 코드 패턴은 프론트엔드가 백엔드 API로부터 viewCount 데이터를 제대로 받지 못하고 있을
     가능성이 매우 높다는 것을 의미합니다. 데이터베이스에는 viewCount를 저장하는 공간이 있지만, API가 이 값을  
     프론트엔드로 전달하는 과정에서 누락시키는 것으로 보입니다. 이 때문에 novel.viewCount는 항상 undefined가  
     되고, 화면에는 || 0에 의해 0만 표시되는 것입니다.

  3. 해결할 방법

   * 백엔드 API 로직 수정:
       1. 서버 코드에서 소설 정보를 반환하는 모든 API(예: /api/novels, /api/novels/:id)를 확인해야 합니다.    
       2. 데이터베이스에서 소설 정보를 조회하는 쿼리에 viewCount 필드가 포함되어 있는지 확인하고, 누락되었다면
          추가해야 합니다.
       3. API가 반환하는 최종 novel 객체에 viewCount 값이 반드시 포함되도록 수정해야 합니다.

   * 프론트엔드 코드 수정 (권장):
       1. 백엔드 수정이 완료된 후, (novel as any).viewCount를 novel.viewCount로 변경하여 더 안정적이고 명확한
          코드로 만들어야 합니다. 이렇게 하면 타입 시스템의 보호를 받을 수 있고, 향후 유사한 문제를 방지할 수
          있습니다.

 1. 해결하고 싶은 점

   * '기여자 순위' 페이지(ContributorRanking.tsx)에 표시되는 사용자별 기여 글자 수가 비정상적으로 높은 숫자로  
     나오는 문제를 해결하고 싶습니다. (예: 총 400자 미만인 소설의 기여자가 4,033자로 표시됨)

  2. 문제가 된 이유

   * ContributorRanking.tsx 컴포넌트는 contributor.totalContribution 이라는 데이터를 API로부터 받아 화면에    
     표시할 뿐, 스스로 숫자를 계산하거나 만들어내지 않습니다.
   * 문제의 진짜 원인은 백엔드 API에 있습니다. 프론트엔드가 기여자 순위 데이터를 요청하는 API
     (/api/novels/:novelId/contributors)가, 각 사용자의 기여 글자 수를 계산하는 과정에서 논리적인 오류를 일으켜
     잘못된 숫자(4,033)를 프론트엔드로 보내주고 있습니다.

  3. 해결할 방법

   * 백엔드 API 로직 수정:
       1. 서버 코드에서 /api/novels/:novelId/contributors 요청을 처리하는 부분을 찾아야 합니다.
       2. 해당 로직이 데이터베이스에서 특정 사용자의 기여도(charCount)를 가져와 합산하는 과정을 면밀히 검토해야  
          합니다.
       3. 잘못된 계산(예: 다른 소설의 기여도를 합산하거나, 특정 숫자를 잘못 더하는 등)을 유발하는 버그를 찾아    
          수정해야 합니다. 이 문제를 해결하기 위해서는 백엔드 라우트와 데이터베이스 쿼리 로직을 디버깅하는 작업이
          필요합니다.
